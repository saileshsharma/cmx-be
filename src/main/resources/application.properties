# ===============================
# Server
# ===============================
server.address=0.0.0.0
server.port=8080

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# GraphQL
# ===============================
spring.graphql.path=/graphql
spring.graphql.schema.locations=classpath:graphql/**/
spring.graphql.graphiql.enabled=true
# spring.graphql.websocket.path=/graphql-ws

# ===============================
# Logging
# ===============================
logging.level.org.springframework=INFO
logging.level.org.apache.kafka.clients.consumer=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.orm.jdbc.bind=OFF
logging.level.org.hibernate.orm.jdbc.extract=OFF

# ===============================
# App Identity
# ===============================
spring.application.name=cmx-be

# ===============================
# Actuator / Management
# ===============================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.base-path=/actuator
management.endpoints.web.discovery.enabled=true
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=cmx-be

# ===============================
# OpenTelemetry
# ===============================
management.tracing.sampling.probability=1.0
otel.exporter.otlp.compression=gzip
otel.resource.attributes=service.name=cmx-be

# ===============================
# Kafka defaults
# ===============================
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.consumer.group-id=cmx-updater
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.isolation.level=read_committed
spring.kafka.consumer.properties.max.poll.interval.ms=600000
spring.kafka.consumer.properties.enable.auto.commit=false

spring.kafka.listener.ack-mode=RECORD

topics.fnolCreated=fnol.created
topics.assignmentMade=assignment.made
cmx.kafka.topic=${topics.fnolCreated:fnol.created}
cmx.kafka.assignment.topic=${topics.assignmentMade:assignment.made}

# ===============================
# Outbox Relay
# ===============================
outbox.relay.batchSize=200
outbox.relay.fixedDelay=1000

# ===============================
# Cache (Caffeine)
# ===============================
spring.cache.type=caffeine
spring.cache.cache-names=allPolicy,findAllByPolicy,findByClaimStatus,findAllClaims,policyByNumber,fnolListByPolicy

cmx.cache.specs.allPolicyCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.policyStatusCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.claimStatusCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.findAllClaimsCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.policyByNumberCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.fnolListByPolicy=maximumSize=10000,expireAfterWrite=3m