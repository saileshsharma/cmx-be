# ===============================
# Server Configuration
# ===============================
server.address=0.0.0.0
server.port=8080

# ===============================
# Database Configuration (PostgreSQL)
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/cmx_new_db1
# spring.datasource.url=jdbc:postgresql://localhost:5432/cmx_be_th
spring.datasource.username=producer_user
spring.datasource.password=PRODUCER_USER
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA / Hibernate Configuration
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# GraphQL Configuration
# ===============================
spring.graphql.path=/graphql
spring.graphql.graphiql.enabled=true
spring.graphql.schema.locations=classpath:graphql/**/
# spring.graphql.websocket.path=/graphql-ws
spring.graphql.cors.allowed-origins=http://localhost:5173,http://localhost:3000
spring.graphql.cors.allowed-methods=GET,POST
spring.graphql.cors.allowed-headers=*
spring.graphql.cors.allow-credentials=true

# ===============================
# Logging Configuration
# ===============================
logging.level.org.springframework=INFO
logging.level.org.apache.kafka.clients.consumer=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.orm.jdbc.bind=OFF
logging.level.org.hibernate.orm.jdbc.extract=OFF

# ===============================
# App Identity
# ===============================
spring.application.name=cmx-be

# ===============================
# Management & Actuator Endpoints
# ===============================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.export.prometheus.enabled=true
management.endpoints.web.base-path=/actuator
management.endpoints.web.discovery.enabled=true
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.metrics.tags.application=cmx-be

# ===============================
# OpenTelemetry Tracing
# ===============================
management.tracing.sampling.probability=1.0
otel.exporter.otlp.endpoint=http://localhost:4317
otel.exporter.otlp.compression=gzip
otel.resource.attributes=service.name=cmx-be

# ===============================
# Security (OAuth2 / Keycloak)
# ===============================
security.oauth2.enabled=false
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9091/realms/auto-insurance
spring.security.oauth2.client.registration.keycloak.client-id=cmx-api
spring.security.oauth2.client.registration.keycloak.client-secret=graphql-secret
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:9091/realms/auto-insurance/protocol/openid-connect/token

# ===============================
# Kafka
# ===============================
spring.kafka.bootstrap-servers=192.168.1.172:9092

# --- Producer (JSON ok) ---
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.enable.idempotence=true

# --- Consumer (SWITCHED TO STRING to avoid CNF) ---
spring.kafka.consumer.group-id=cmx-updater
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.isolation.level=read_committed
spring.kafka.consumer.properties.max.poll.interval.ms=600000
spring.kafka.consumer.properties.enable.auto.commit=false

# Remove JSON-targeted configs that were forcing a missing class at startup
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.value.default.type=com.cb.th.claims.cmx.events.FnolCreated
# spring.kafka.consumer.properties.spring.json.use.type.headers=true

# --- Listener ---
spring.kafka.listener.ack-mode=RECORD

# --- Topics ---
topics.fnolCreated=fnol.created
topics.assignmentMade=assignment.made
cmx.kafka.topic=${topics.fnolCreated:fnol.created}
cmx.kafka.assignment.topic=${topics.assignmentMade:assignment.made}

# ===============================
# Outbox Relay
# ===============================
outbox.relay.batchSize=200
outbox.relay.fixedDelay=1000

# ===============================
# Cache (Caffeine)
# ===============================
spring.cache.type=caffeine
spring.cache.cache-names=allPolicy,findAllByPolicy,findByClaimStatus,findAllClaims,policyByNumber,fnolListByPolicy

cmx.cache.specs.allPolicyCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.policyStatusCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.claimStatusCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.findAllClaimsCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.policyByNumberCacheKey=maximumSize=10000,expireAfterWrite=10m
cmx.cache.specs.fnolListByPolicy=maximumSize=10000,expireAfterWrite=3m