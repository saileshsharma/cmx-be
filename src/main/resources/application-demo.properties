

# ===============================
# Database (from .env.demo)
# ===============================
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate

# ===============================
# GraphQL CORS
# ===============================
spring.graphql.cors.allowed-origins=https://demo.cmx-ui.example.com
spring.graphql.cors.allowed-methods=GET,POST
spring.graphql.cors.allowed-headers=*
spring.graphql.cors.allow-credentials=true

# ===============================
# OpenTelemetry
# ===============================
otel.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT}

# ===============================
# Kafka
# ===============================
spring.kafka.bootstrap-servers=${KAFKA_BROKERS}

# ===============================
# Security (Keycloak)
# ===============================
security.oauth2.enabled=true
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
