version: "3.8"

services:
  cmx-be:
    image: cmx-be:latest            # built by your CI/CD
    container_name: cmx-be
    restart: unless-stopped
    environment:
      # --- Spring profile/port/timezone ---
      SPRING_PROFILES_ACTIVE: "prod"
      SERVER_PORT: "8080"
      TZ: "Asia/Singapore"

      # --- Database (managed DB; don't expose DB here) ---
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"

      # --- JPA (prod: schema managed by Flyway/Liquibase) ---
      SPRING_JPA_HIBERNATE_DDL_AUTO: "validate"

      # --- Kafka ---
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BROKERS}"

      # --- CORS (Spring GraphQL) ---
      SPRING_GRAPHQL_CORS_ALLOWED_ORIGINS: "${CORS_ALLOWED_ORIGINS}"
      SPRING_GRAPHQL_CORS_ALLOWED_METHODS: "GET,POST"
      SPRING_GRAPHQL_CORS_ALLOWED_HEADERS: "*"
      SPRING_GRAPHQL_CORS_ALLOW_CREDENTIALS: "true"

      # --- OpenTelemetry (optional) ---
      # OTEL_EXPORTER_OTLP_ENDPOINT: "${OTEL_EXPORTER_OTLP_ENDPOINT}"

      # --- OAuth2 Resource Server (ON only when provided) ---
      # Prefer setting the resolved issuer directly (no placeholders):
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "${OAUTH_ISSUER_URI}"

      # If you truly want to pass KEYCLOAK_URL/REALM instead, ensure your
      # application-prod.properties constructs issuer-uri from them. Otherwise prefer OAUTH_ISSUER_URI above.
      # KEYCLOAK_URL: "${KEYCLOAK_URL}"
      # KEYCLOAK_REALM: "${KEYCLOAK_REALM}"

      # JVM opts (tune for your infra)
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75 -XX:InitialRAMPercentage=50 -XX:+ExitOnOutOfMemoryError"

    ports:
      - "8080:8080"

    healthcheck:
      # Requires Spring Actuator; change path if different
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 30s
      timeout: 5s
      retries: 10

    # Limit resources (example â€” adjust to your host)
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2g
        reservations:
          cpus: "1.0"
          memory: 1g
